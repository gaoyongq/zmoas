<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<!-- 属性文件读入 -->
	<!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
	<!--<property name="ignoreUnresolvablePlaceholders" value="true" />-->
	<!--<property name="locations">-->
	<!--<list>-->
	<!--<value>classpath:${env}/config.properties</value>-->
	<!--</list>-->
	<!--</property>-->
	<!--</bean>-->



	<mvc:default-servlet-handler />
	<context:annotation-config />
	<!-- <context:component-scan base-package="com.jd.b2b" /> -->
	<context:component-scan base-package="com.zm">
		<!-- 事务问题解决 -->

		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!--
	<context:component-scan base-package="com.jd.ecc.b2b.sso">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	 -->
	<!--拦截器-->
	<!--<mvc:interceptors>-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/system/*"/>-->
			<!--<mvc:mapping path="/privileges/*"/>-->
			<!--<mvc:mapping path="/business/*"/>-->
			<!--&lt;!&ndash;<mvc:exclude-mapping path="/checkCAticket/**"/>&ndash;&gt;-->
			<!--&lt;!&ndash;<mvc:exclude-mapping path="/bcookie/**"/>&ndash;&gt;-->
			<!--&lt;!&ndash;<mvc:exclude-mapping path="/quickLg/quickLogin.action"/>&ndash;&gt;-->
			<!--<bean class="com.zm.mall.web.interceptor.CacheInterceptor"></bean>-->
		<!--</mvc:interceptor>-->
	<!--</mvc:interceptors>-->


	<!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>/WEB-INF/vm</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="directive.foreach.counter.name">loopCounter</prop>
				<prop key="directive.foreach.counter.initial.value">0</prop>
			</props>
		</property>
		<property name="configLocation" value="classpath:/velocity.properties"/>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="layoutUrl" value="/layout/default.vm"/>
		<property name="suffix">
			<value>.vm</value>
		</property>
		<property name="exposeSpringMacroHelpers" value="true"/>
		<property name="dateToolAttribute" value="dateTool"/>
		<property name="numberToolAttribute" value="numberTool"/>
		<!---增加vm中工具类  lys 2016 01 12-->
		<property name="attributesMap" ref="_urlBuilderMap" />
		<property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>

	</bean>


	<util:map id="_urlBuilderMap">
		<entry key="stringUtils">
			<bean class="org.apache.commons.lang.StringUtils"/>
		</entry>
	</util:map>

	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler/>

	<!-- 定义无需Controller的url<->view直接映射 -->
	<!--上传图片需要引入的类-->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	<!-- 将Controller抛出的异常转到特定View,保持SiteMesh的装饰效果 -->
	<!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	<property name="exceptionMappings">
		<props>
			<prop key="java.lang.Throwable">error</prop>
		</props>
	</property>
</bean>-->
	<bean class="com.zm.mall.web.exception.ExceptionHandler"></bean>
	<!--<mvc:annotation-driven>-->
	<!---->
	<!--</mvc:argument-resolvers>-->
	<bean id="velocityUrlDomain" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<!--css js 图片-->
				<entry key="miscDomain" value="misc.gogbuy.com"></entry>
			</map>
		</constructor-arg>
	</bean>

	<!--<mvc:annotation-driven validator="validator"/>-->
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
	<!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
	<!--<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
	<!--</bean>-->

	<!--<import resource="servlet-context-interceptor.xml"/>-->
</beans>