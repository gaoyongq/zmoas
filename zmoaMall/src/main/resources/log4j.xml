<?xml version='1.0' encoding='GBK' ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d [%7r] %6p - %c - %m %n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="${ecc.mall.log.level}" />
			<param name="LevelMax" value="ERROR"/>
			<!--<param name="LevelMax" value="FATAL "/> -->
		</filter>
	</appender>
    <logger name="org.apache.zookeeper" additivity="true">
		<level value="ERROR" />
	</logger>
	<appender name="FILE-ALL" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="DatePattern" value="'.'yyyy-MM-dd" />
		<param name="Append" value="true" />
		<param name="file" value="${ecc.mall.log.path}/mall-all.log" />
		<param name="encoding" value="UTF-8"/>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d [%7r] %6p - %c - %m %n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="${ecc.mall.log.level}" />
			<!--<param name="LevelMax" value="FATAL "/> -->
		</filter>
	</appender>


	<appender name="FILE-SQL" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="DatePattern" value="'.'yyyy-MM-dd" />
		<param name="file" value="${ecc.mall.log.path}/weike_fg-sql.log" />
		<param name="encoding" value="UTF-8"/>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d [%7r] %6p - %c - %m %n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="${ecc.mall.log.level}" />
			<!--<param name="LevelMax" value="FATAL "/> -->
		</filter>
	</appender>



	<category name="java.sql" additivity="true">
		<priority value="${ecc.mall.log.level}" />
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="FILE-SQL" />
	</category>


	<root>
		<priority value="${ecc.mall.log.level}" />
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="FILE-ALL" />
	</root>

	<!-- IBatis -->
	<appender name="IBatis" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-4r [%t] %-5p %c %x - %m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="ERROR" />
			<!-- <param name="LevelMax" value="DEBUG" /> -->
		</filter>
	</appender>
	 <!-- 设置mybits打印sql语句,此处的name要设置为下图website.xml的mapper的namespace名字-->
	 <logger name="com.jd.ecc.b2b.mall.center.dao.MallRecommendWareDao" additivity="false">
	  <level value="DEBUG"></level>
	  <appender-ref ref="mybatis-sql"></appender-ref>
	  <appender-ref ref="FILE-SQL"></appender-ref>
	 </logger>
	 <!-- 设置mybits打印sql语句,此处的name要设置为下图website.xml的mapper的namespace名字-->
	 <logger name="com.jd.ecc.b2b.mall.center.dao.MallRecommendDao" additivity="false">
	  <level value="DEBUG"></level>
	  <appender-ref ref="mybatis-sql"></appender-ref>
	  <appender-ref ref="FILE-SQL"></appender-ref>
	 </logger> 
	 
	 <appender name="mybatis-sql" class="org.apache.log4j.ConsoleAppender">
	  <layout class="org.apache.log4j.PatternLayout">
	   <param name="ConversionPattern" value="%-4r [%t] %-5p %c %x - %m%n" />
	  </layout>
	 </appender>

	<logger name="com.ibatis" additivity="true">
		<level value="${ecc.mall.log.level}" />
	</logger>

	<logger name="java.sql.Connection" additivity="true">
		<level value="${ecc.mall.log.level}" />
	</logger>

	<logger name="java.sql.Statement" additivity="true">
		<level value="${ecc.mall.log.level}" />
	</logger>

	<logger name="java.sql.PreparedStatement" additivity="true">
		<level value="${ecc.mall.log.level}" />
		<appender-ref ref="IBatis" />
	</logger>

	<logger name="java.sql.ResultSet" additivity="true">
		<level value="${ecc.mall.log.level}" />
		<appender-ref ref="IBatis" />
	</logger>

	<logger name="org.springframework" additivity="true">
		<level value="WARN" />
	</logger>

	<logger name="com.opensymphony" additivity="true">
		<level value="WARN" />
	</logger>

	<logger name="org.apache.struts2" additivity="true">
		<level value="WARN" />
	</logger>
	
	<logger name="org.quartz" additivity="true">
		<level value="WARN" />
	</logger>
	
	<logger name="org.apache.cxf" additivity="true">
		<level value="WARN" />
	</logger>  

</log4j:configuration>

<!-- -X号: X信息输出时左对齐；  
    %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,  
    %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  
    %r: 输出自应用启动到输出该log信息耗费的毫秒数  
    %c: 输出日志信息所属的类目，通常就是所在类的全名  
    %t: 输出产生该日志事件的线程名  
    %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10)  
    %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。  
    %%: 输出一个"%"字符  
    %F: 输出日志消息产生时所在的文件名称  
    %L: 输出代码中的行号  
    %m: 输出代码中指定的消息,产生的日志具体信息  
    %n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行  
    可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：  
    1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。  
    2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，"-"号指定左对齐。  
    3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。  
    4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边较远输出的字符截掉。   -->
    